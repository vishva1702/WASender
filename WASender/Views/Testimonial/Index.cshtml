@using WASender.Models
@model IEnumerable<Post>

@{
    ViewData["Title"] = "Create Testimonial";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
    ViewData["Buttons"] = new List<dynamic>
{
    new
    {
        name = "<i class='fa fa-plus'></i>&nbsp; Create Testimonial",
        url = "#", // keep it as # because you're triggering modal, not navigating
        is_button = false,
        components = "data-toggle='modal' data-target='#addRecord' id='add_record'"
    }
};

}
@await Html.PartialAsync("_HeaderSection")

<!-- Add Record Modal -->
<div class="modal fade" id="addRecord" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="CreateTestimonial" enctype="multipart/form-data" method="post">
                @Html.AntiForgeryToken()

                <div class="modal-header">
                    <h3>Create Testimonial</h3>
                </div>

                <div class="modal-body">
                    <div class="form-group">
                        <label>Reviewer Name</label>
                        <input type="text" name="ReviewerName" maxlength="150" class="form-control" required />
                    </div>

                    <div class="form-group">
                        <label>Reviewer Position</label>
                        <input type="text" name="ReviewerPosition" class="form-control" required placeholder="CEO of Google" maxlength="50" />
                    </div>

                    <div class="form-group">
                        <label>Reviewer Avatar</label>
                        <input type="file" name="ReviewerAvatar" accept="image/*" class="form-control" required />
                    </div>

                    <div class="form-group">
                        <label>Review Star</label>
                        <select class="form-control" name="Star">
                            <option value="5">5 Star</option>
                            <option value="4">4 Star</option>
                            <option value="3">3 Star</option>
                            <option value="2">2 Star</option>
                            <option value="1">1 Star</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Comment</label>
                        <textarea class="form-control h-100" maxlength="500" name="Comment" required></textarea>
                    </div>

                    <div class="form-group">
                        <button type="submit" class="btn btn-neutral submit-button">Create Now</button>
                    </div>
                </div>

            </form>
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success mt-3">@TempData["Success"]</div>
            }
            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger mt-3">@TempData["Error"]</div>
            }
        </div>
    </div>
</div>

<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="Edit" asp-controller="Testimonial" method="post" enctype="multipart/form-data" id="editForm">
                @Html.AntiForgeryToken()
                <input type="hidden" name="Id" id="edit_id" />

                <div class="modal-header">
                    <h3>Edit Testimonial</h3>
                </div>

                <div class="modal-body">
                    <div class="form-group">
                        <label>Reviewer Name</label>
                        <input type="text" name="ReviewerName" id="reviewer_name" maxlength="150" class="form-control" required />
                    </div>

                    <div class="form-group">
                        <label>Reviewer Position</label>
                        <input type="text" name="ReviewerPosition" id="reviewer_position" class="form-control" required placeholder="CEO of Google" maxlength="50" />
                    </div>

                    <div class="form-group">
                        <label>Reviewer Avatar</label>
                        <input type="file" name="ReviewerAvatar" accept="image/*" class="form-control" />
                    </div>

                    <div class="form-group">
                        <label>Review Star</label>
                        <select class="form-control" name="Star" id="star">
                            <option value="5">5 Star</option>
                            <option value="4">4 Star</option>
                            <option value="3">3 Star</option>
                            <option value="2">2 Star</option>
                            <option value="1">1 Star</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Comment</label>
                        <textarea class="form-control h-100" maxlength="500" name="Comment" id="comment" required></textarea>
                    </div>

                    <div class="form-group">
                        <button type="submit" class="btn btn-neutral submit-button">Update</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>


<!-- Content Section -->
<div class="row">
    <div class="col">
        <div class="card">
            <!-- Card header -->
            <div class="card-header border-0">
                <h3 class="mb-0">Testimonials</h3>
            </div>

            <!-- Table -->
            <div class="table-responsive">
                <table class="table align-items-center table-flush">
                    <thead class="thead-light">
                        <tr>
                            <th class="col-3">Reviewer Name</th>
                            <th class="col-2">Reviewer Position</th>
                            <th class="col-4">Comment</th>
                            <th class="col-1 text-right">Ratings</th>
                            <th class="col-1 text-right">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            foreach (var post in Model)
                            {
                                var preview = post.Postmetas.FirstOrDefault(m => m.Key == "preview");
                                var excerpt = post.Postmetas.FirstOrDefault(m => m.Key == "excerpt");

                                <tr>
                                    <td class="text-left">
                                        <img src="@preview?.Value" class="avatar rounded-square mr-3" />
                                        @Html.Raw(post.Title.Length > 30 ? post.Title.Substring(0, 30) + "..." : post.Title)
                                    </td>
                                    <td class="text-left">
                                        @Html.Raw(post.Slug.Length > 30 ? post.Slug.Substring(0, 30) + "..." : post.Slug)
                                    </td>
                                    <td class="text-left">
                                        @Html.Raw(excerpt?.Value?.Length > 50 ? excerpt.Value.Substring(0, 50) + "..." : excerpt?.Value)
                                    </td>
                                    <td class="text-right">
                                        @post.Lang Star
                                    </td>
                                    <td class="text-right">
                                        <div class="btn-group mb-2 float-right">
                                            <button class="btn btn-neutral btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                Action
                                            </button>
                                            <div class="dropdown-menu">
                                                <a class="dropdown-item has-icon edit-row"
                                                   href="#"
                                                   data-id="@post.Id"
                                                   data-action="@Url.Action("Update", "Testimonials", new { id = post.Id })"
                                                   data-title="@post.Title"
                                                   data-slug="@post.Slug"
                                                   data-comment="@excerpt?.Value"
                                                   data-lang="@post.Lang"
                                                   data-toggle="modal"
                                                   data-target="#editModal">
                                                    <i class="fi fi-rs-edit"></i> Edit
                                                </a>
                                                <a class="dropdown-item has-icon delete-confirm-testimonial" href="javascript:void(0)" data-action="@Url.Action("Delete", "Testimonial", new { id = post.Id })">
                                                    <i class="fas fa-trash"></i> Remove Testimonial
                                                </a>


                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="5" class="text-center">No testimonials found.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination Placeholder (implement your pagination here if needed) -->
            <div class="card-footer py-4">
                @* If you have pagination, include it here *@
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(".edit-row").on("click", function () {
            const btn = $(this);
            $("#edit_id").val(btn.data("id"));
            $("#reviewer_name").val(btn.data("title"));
            $("#reviewer_position").val(btn.data("slug"));
            $("#star").val(btn.data("lang"));
            $("#comment").val(btn.data("comment"));
        });

        $("#editForm").on("submit", function (e) {
            e.preventDefault();

            const formData = new FormData(this);
            $.ajax({
                url: '@Url.Action("Edit", "Testimonial")',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (res) {
                    if (res.success) {
                        // ✅ Optionally show toast or reload
                        location.href = res.redirect;
                    } else {
                        alert(res.message);
                    }
                },
                error: function () {
                    alert("Something went wrong.");
                }
            });
        });

    </script>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll(".delete-confirm-testimonial").forEach(button => {
                button.addEventListener("click", function (e) {
                    e.preventDefault();
                    let deleteUrl = this.getAttribute("data-action");

                    if (!deleteUrl) {
                        Swal.fire("Error!", "Invalid delete URL.", "error");
                        return;
                    }

                    Swal.fire({
                        title: "Are you sure?",
                        text: "You want to delete this testimonial?",
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: "Yes, delete it!"
                    }).then((result) => {
                        if (result.isConfirmed) {
                            fetch(deleteUrl, {
                                method: "POST",
                                headers: {
                                    "Content-Type": "application/json",
                                    "X-CSRF-TOKEN": document.querySelector('input[name="__RequestVerificationToken"]').value
                                }
                            })
                            .then(response => {
                                if (response.ok) {
                                    Swal.fire("Deleted!", "The testimonial has been deleted.", "success")
                                        .then(() => location.reload());
                                } else {
                                    return response.text().then(text => { throw new Error(text); });
                                }
                            })
                            .catch(error => Swal.fire("Error!", "Failed to delete: " + error.message, "error"));
                        }
                    });
                });
            });
        });
    </script>
}