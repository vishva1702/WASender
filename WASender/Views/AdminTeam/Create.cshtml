@model WASender.Models.Post

@{
    ViewData["Title"] = "Create Team Member";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
    ViewData["Buttons"] = new List<dynamic>
    {
        new { name = "Back", url = Url.Action("Index", "AdminTeam"), is_button = false, components = "" }
    };
}

@await Html.PartialAsync("_HeaderSection")

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}

<form method="post" asp-action="Store" enctype="multipart/form-data">
    <div class="row">
        <!-- Left Section -->
        <div class="col-lg-5">
            <strong>Create a Team Member</strong>
            <p>Add your team member details and necessary information here.</p>
        </div>

        <!-- Right Section (Card) -->
        <div class="col-lg-7">
            <div class="card">
                <div class="card-header">
                    <h3 class="mb-0">Create Team Member</h3>
                </div>
                <div class="card-body">
                    <div class="form-group">
                        <label>Member Name</label>
                        <input type="text" name="member_name" required class="form-control">
                    </div>
                    <div class="form-group">
                        <label>Member Position</label>
                        <input type="text" name="member_position" required class="form-control">
                    </div>
                    <div class="form-group">
                        <label>Profile Picture</label>
                        <input type="file" name="profile_picture" accept="image/*" required class="form-control">
                    </div>
                    <div class="form-group">
                        <label>Profile Description</label>
                        <textarea name="about" required class="form-control h-200" maxlength="1000"></textarea>
                    </div>

                    <!-- Social Media Links -->
                    <div class="form-group">
                        <label>Facebook Profile Link</label>
                        <input type="url" name="socials[facebook]" class="form-control">
                    </div>
                    <div class="form-group">
                        <label>Twitter Profile Link</label>
                        <input type="url" name="socials[twitter]" class="form-control">
                    </div>
                    <div class="form-group">
                        <label>LinkedIn Profile Link</label>
                        <input type="url" name="socials[linkedin]" class="form-control">
                    </div>
                    <div class="form-group">
                        <label>Instagram Profile Link</label>
                        <input type="url" name="socials[instagram]" class="form-control">
                    </div>

                    <div class="d-flex">
                        <label class="custom-toggle custom-toggle-primary">
                            <input type="checkbox" name="status" value="1" id="publish-toggle"
                                   class="save-template"
                            @(Model?.Status == 1 ? "checked" : "")>
                            <span class="custom-toggle-slider rounded-circle" data-label-off="No" data-label-on="Yes"></span>
                        </label>
                        <label class="mt-1 ml-1" for="publish-toggle">
                            <h4>Make it Publish?</h4>
                        </label>
                    </div>

                    
                    <label class="switch">
                        <input type="checkbox" id="statusToggle">
                        <span class="slider round"></span>
                    </label>
                    <input type="hidden" id="statusValue" name="status" value="0">

                    <script>
                        document.addEventListener("DOMContentLoaded", function () {
                            const toggle = document.getElementById("statusToggle");
                            const statusInput = document.getElementById("statusValue");

                            // Default value
                            statusInput.value = toggle.checked ? "1" : "0";

                            toggle.addEventListener("change", function () {
                                statusInput.value = this.checked ? "1" : "0";
                                console.log("Status Value:", statusInput.value);
                            });

                            // Debug: Log value on form submit
                            document.querySelector("form").addEventListener("submit", function () {
                                console.log("Submitting status:", statusInput.value);
                            });
                        });
                    </script>

                    <style>
                        /* Custom Toggle Switch */
                        .switch {
                            position: relative;
                            display: inline-block;
                            width: 50px;
                            height: 25px;
                        }

                            .switch input {
                                opacity: 0;
                                width: 0;
                                height: 0;
                            }

                        .slider {
                            position: absolute;
                            cursor: pointer;
                            top: 0;
                            left: 0;
                            right: 0;
                            bottom: 0;
                            background-color: #ccc;
                            transition: 0.4s;
                            border-radius: 25px;
                        }

                            .slider::before {
                                position: absolute;
                                content: "";
                                height: 18px;
                                width: 18px;
                                left: 4px;
                                bottom: 3px;
                                background-color: white;
                                transition: 0.4s;
                                border-radius: 50%;
                            }

                        input:checked + .slider {
                            background-color: #4CAF50;
                        }

                            input:checked + .slider::before {
                                transform: translateX(24px);
                            }
                    </style>


                    <!-- Submit Button -->
                    <div class="form-group row mt-3">
                        <div class="col-lg-12">
                            <button type="submit" class="btn btn-primary">Submit</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
