@model List<WASender.Models.Plan>
@using Microsoft.AspNetCore.Http
@using Newtonsoft.Json
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Subscription Plan";
    var userPlanId = User.Claims.FirstOrDefault(c => c.Type == "PlanId")?.Value;
}

@if (TempData["saas_error"] != null)
{
    <div class="col-sm-12">
        <div class="alert bg-gradient-danger text-white alert-dismissible fade show" role="alert">
            <span class="alert-icon"><i class="fi fi-rs-info"></i></span>
            <span class="alert-text"><strong>!Opps </strong> @TempData["saas_error"]</span>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">×</span>
            </button>
        </div>
    </div>
}

<div class="row">
    @foreach (var plan in Model)
    {
        <div class="col-sm-4 text-center">
            <div class="card">
                <div class="card-body">
                    <h2 class="pricing-green">@plan.Title</h2>
                    <h1>@plan.Price?.ToString("C")</h1>
                    @(plan.Days == 30 ? "Per month" : "Per year")
                    <hr>

                    @if (!string.IsNullOrEmpty(plan.Data))
                    {
                        var planData = JsonConvert.DeserializeObject<Dictionary<string, object>>(plan.Data);
                        if (planData != null)
                        {
                            foreach (var item in planData)
                            {
                                var key = item.Key;
                                var data = item.Value;
                                bool isBoolean = data is bool;
                                bool value = isBoolean && (bool)data;
                                string title = key.Replace("_", " ");

                                <div class="mt-2 text-left">
                                    @if (isBoolean)
                                    {
                                        <i class="@(value ? "far text-success fa-check-circle" : "fas text-danger fa-times-circle")"></i>
                                    }
                                    else
                                    {
                                        <i class="far text-success fa-check-circle"></i>
                                    }
                                    @title
                                </div>
                            }
                        }
                    }

                    <hr>

                    <a class="btn btn-block btn-neutral" href="@Url.Action("Show", "Subscription", new { id = plan.Id })">
                        <i class="@(userPlanId == plan.Id.ToString() ? "fa fa-check" : "fa fa-plus-circle")"></i>
                        @(userPlanId == plan.Id.ToString() ? "Activated" : "Subscribe")
                    </a>
                </div>
            </div>
        </div>
    }
</div>
